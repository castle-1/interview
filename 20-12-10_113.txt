1.상속을 UML로 표기해 보세요.

2.부모클래스와 자식클래스의 다른 용어들은?
상위클래스와 하위클래스

3.super 키워드와 this 키워드의 차이는 무엇인가요?
this는 자기자신의 생성자 호출
super은 상위클래스의 생성자 호출

4.단일 상속과 다중상속 이란?
단일 상속이란 하위클래스가 상위클래스 하나를 상속받는 행위
다중상속이란 하위클래스가 여러개의 상위클래스 에게서 상속을 받는 행위

5.다음 코드와 같이 과목과 점수가 짝을 이루도록 2개의 배열을 작성하라.

String course[] = {"Java", "C++", "HTML5", "컴퓨터구조", "안드로이드"};
int score[]  = {95, 88, 76, 62, 55};
그리고 다음 예시와 같이 과목 이름을 입력받아 점수를 출력하는 프로그램을 작성하라.
 "그만"을 입력받으면 종료한다. (Java는 인덱스 0에 있으므로 score[0]을 출력)

과목 이름 >> Jaba
없는 과목입니다.
과목 이름 >> Java
Java의 점수는 95
과목 이름 >> 안드로이드
안드로이드의 점수는 55
과목 이름 >> 그만

[Hint] 문자열을 비교하기 위해서는 String 클래스의 equals()메소드를 이용해야 한다.

String name;
if(course[i].equals(name)) {
    int n = score[i];
    ...
}

public class SubjectMain {
	public static void main(String[] args) {
		Subject subject = new Subject();
		subject.inputPrint();

	}

}

import java.util.Scanner;

public class Subject {

	private String[] course;
	private int[] score;

	Subject() {

		this.course = new String[] { "Java", "C++", "HTML5", "컴퓨터구조", "안드로이드" };
		this.score = new int[] { 95, 88, 76, 62, 55 };
	}

	public void inputPrint() {
		Scanner sc = null;
		boolean tf = true;
		while (tf) {
			sc = new Scanner(System.in);
			System.out.println("과목 이름 >>");
			String sj = sc.next();

			if (sj.equals("그만")) {
				tf = false;
				break;
			}

			if (course == null && score == null) {
				System.out.println("배열이 비어있습니다.");
				return;
			} else {
				for (int i = 0; i < course.length; i++) {
					if (!sj.equals(course[i])) {

						System.out.println("없는 과목 입니다.");
						break;
					} else {
						System.out.println(course[i] + "의 점수는 " + score[i]);
						break;
					}
				}
			}
		}
		sc.close();

	}

}




6.다음은 2차원 상의 한 점을 표현하는 Point 클래스이다.

class Point {
   private int x, y;
   public Point(int x, int y) { this.x = x; this.y = y; }
   public int getX() { return x; }
   public int getY() { return y; }
   protected void move(int x, int y) { this.x =x; this.y = y; }
}


Point를 상속받아 색을 가진 점을 나타내는 ColorPoint 클래스를 작성하라. 
다음 main() 메소드를 포함하고 실행 결과와 같이 출력되게 하라.

public static void main(String[] args) {
   ColorPoint cp = new ColorPoint(5, 5, "YELLOW");
   cp.setXY(10, 20);
   cp.setColor("RED");
   String str = cp.toString();
   System.out.println(str+"입니다. ");
}

=======================
RED색의 (10,20)의 점입니다. 

public class PointMain {

	public static void main(String[] args) {
		ColorPoint cp = new ColorPoint(5, 5, "YELLOW");
		cp.setXY(10, 20);
		cp.setColor("RED");
		String str = cp.toString();
		System.out.print(str + "입니다.");

	}

}

public class Point {
	private int x, y;

	public Point(int x, int y) {
		this.x = x;
		this.y = y;
	}

	public int getX() {
		return x;
	}

	public int getY() {
		return y;
	}

	protected void move(int x, int y) {
		this.x = x;
		this.y = y;
	}

}

class ColorPoint extends Point{
	private String color;
	public ColorPoint(int i, int j, String color) {
		super(i, j);
		this.color = color;
	}

	public void setXY(int x, int y) {
		super.move(x, y);
	}

	public void setColor(String color) {
		this.color = color;
	}
	public String toString() {
		System.out.print(color + "색의 " + "(" + getX() + "," + getY()+")의 점");
		return "";
		
	}
	
}



7.Point를 상속받아 색을 가진 점을 나타내는 ColorPoint 클래스를 작성하라.
 다음 main() 메소드를 포함하고 실행 결과와 같이 출력되게 하라.

public static void main(String[] args) {
   ColorPoint zeroPoint = new ColorPoint(); // (0,0) 위치의 BLACK 색 점
   System.out.println(zeroPoint.toString() + "입니다.");
   ColorPoint cp = new ColorPoint(10, 10); // (10,10) 위치의 BLACK 색 점
   cp.setXY(5,5);
   cp.setColor("RED");
   System.out.println(cp.toString()+"입니다.");
}
=========================
BLACK색의 (0,0) 점입니다.
RED색의 (5,5) 점입니다.

public class PointMain {
	public static void main(String[] args) { //7번 문제
		
		
		ColorPoint zeroPoint = new ColorPoint(); // (0,0) 위치의 BLACK 색 점
		System.out.println(zeroPoint.toString() + "입니다.");
		ColorPoint cp = new ColorPoint(10, 10); // (10,10) 위치의 BLACK 색 점
		cp.setXY(5,5);
		cp.setColor("RED");
		System.out.println(cp.toString()+"입니다.");
	}
	
package java_20_12_10;

public class Point {
	private int x, y;

	public Point(int x, int y) {
		this.x = x;
		this.y = y;
	}

	public int getX() {
		return x;
	}

	public int getY() {
		return y;
	}

	protected void move(int x, int y) {
		this.x = x;
		this.y = y;
	}

}
class ColorPoint extends Point{
	private String color;
	
	
	public ColorPoint(){
		super(0, 0);
		this.color ="BLACK";
		
	}
	
	public ColorPoint(int x, int y) {
		super(x, y);
	}

	public void setXY(int x, int y) {
		super.move(x, y);
	}

	public void setColor(String color) {
		this.color = color;
	}
	
	public String toString() {
		System.out.print(color + "색의 " + "(" + getX() + "," + getY()+")의 점");
		return "";
		
	}
	
}

8.Point를 상속받아 3차원의 점을 나타내는 Point3D 클래스를 작성하라. 
다음 main() 메소드를 포함하고 실행 결과와 같이 출력되게 하라.

public static void main(String[] args) {
   Point3D p = new Point3D(1,2,3); // 1,2,3은 각각 x, y, z축의 값.
   System.out.println(p.toString()+"입니다.");

   p.moveUp(); // z 축으로 위쪽 이동
   System.out.println(p.toString()+"입니다.");

   p.moveDown(); // z 축으로 아래쪽 이동

   p.move(10, 10); // x, y 축으로 이동
   System.out.println(p.toString()+"입니다.");

   p.move(100,  200, 300); // x, y, z축으로 이동
   System.out.println(p.toString()+"입니다.");
}
(1,2,3) 의 점입니다.
(1,2,4) 의 점입니다.
(10,10,3) 의 점입니다.
(100,200,300) 의 점입니다.

public class PointMain {
	
	public static void main(String[] args) { //8번 문제
		
		Point3D p = new Point3D(1,2,3); // 1,2,3은 각각 x, y, z축의 값.
		   System.out.println(p.toString()+"입니다.");
		   p.moveUp(); // z 축으로 위쪽 이동
		   System.out.println(p.toString()+"입니다.");
		   p.moveDown(); // z 축으로 아래쪽 이동
		   p.move(10, 10); // x, y 축으로 이동
		   System.out.println(p.toString()+"입니다.");
		   p.move(100,  200, 300); // x, y, z축으로 이동
		   System.out.println(p.toString()+"입니다.");
		
		
	}

class Point3D extends Point{//8번 문제
	private int z;
	
	
	public Point3D(int x, int y, int z) {
		super(x, y);
		this.z = z;
	}

	public void moveUp() {
		this.z = z+1;
	}

	public void moveDown() {
		this.z = z-1;
	}
	
	public void move(int x, int y) {
		super.move(x, y);
	}

	public void move(int x, int y, int z) {
		super.move(x, y);
		this.z = z;
	}
	
	public int getZ() {
		return z;
	}
	
	public String toString() {
		System.out.print("("+getX()+","+getY()+","+z+")의 점");
		return "";
		
	}
	
}


9.배열을 이용하여 간단한 극장 예약 시스템을 작성하여 보자.

아주 작은 극장이라서 좌석이 10개 밖에 되지 않는다.

사용자가 예약을 하려고 하면 먼저 좌석 배치표를 보여준다.

즉, 예약이 끝난 좌석은 1로, 예약이 되지 않은 좌석은 0으로 나타낸다.
=========
출력
--------------------
0 1 2 3 4 5 6 7 8 9
--------------------
0 0 0 0 0 0 0 0 0 0

몇번째 좌석을 예약 하시겠습니까? 2
--------------------
0 1 2 3 4 5 6 7 8 9
--------------------
0 0 1 0 0 0 0 0 0 0

public class MovieMain {
	
	 public static void main(String[] args) {
		Movie movie = new Movie();
		movie.run();
	}

}
import java.util.Scanner;

public class Movie {

	private final int ROWS = 10;
	private final int COLS = 10;
	private int[] seat1;
	private int[] seat2;

	public Movie() {

		this.seat1 = new int[ROWS];
		this.seat2 = new int[COLS];
	}

	public void run() {
		input();
		seatPrint();
		Ticketing();
	}

	private void input() {

		for (int i = 0; i < seat1.length; i++) {
			seat1[i] = i;
		}
		for (int i = 0; i < seat2.length; i++) {
			seat2[i] = 0;
		}

	}

	private void seatPrint() {
		System.out.println("-------------------");
		for (int i = 0; i < seat1.length; i++) {

			System.out.print(seat1[i] + " ");
		}
		System.out.println();
		System.out.println("-------------------");
		for (int i = 0; i < seat2.length; i++) {
			System.out.print(seat2[i] + " ");
		}
		System.out.println();

	}

	private void Ticketing() {
		Scanner sc = new Scanner(System.in);
		System.out.println("몇번째 좌석을 예약 하시겠습니까?");
		int select = sc.nextInt();

		System.out.println("-------------------");
		for (int i = 0; i < seat1.length; i++) {

			System.out.print(seat1[i] + " ");
		}
		System.out.println();
		System.out.println("-------------------");
		for (int i = 0; i < seat2.length; i++) {
			if (select == seat1[i]) {
				seat2[i] = 1;
			}
			System.out.print(seat2[i] + " ");
		}
		sc.close();
	}

}
