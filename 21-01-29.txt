페이징 & 유효성검사

- 1. emp 유효성 검사 -
 ->컨트톨러
package edu.bit.emp.controller;

import java.util.List;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.validation.FieldError;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;

import edu.bit.emp.Service.empService;
import edu.bit.emp.VO.empVo;
import edu.bit.emp.validator.Validator;
import lombok.AllArgsConstructor;
import lombok.extern.log4j.Log4j;

@Log4j
@AllArgsConstructor
@Controller
public class EmpController {
	private empService empservice;

	@GetMapping("/employInput")
	public void employInput(Model model, empVo empvo) throws Exception {
		log.info("employInput controller");

		model.addAttribute("listMgr", empservice.getListMgr());
		model.addAttribute("listDep", empservice.getListDep());
		model.addAttribute("empno", empservice.getempno(empvo.getEmpno()));

		
	}

	@GetMapping("/tables")
	public void list(Model model) throws Exception {
		log.info("tables");
		model.addAttribute("list", empservice.getList());

	}

	@PostMapping("/update")
	public String update(@ModelAttribute("empVo") empVo empvo, BindingResult result) throws Exception {
		log.info("update");
		
		
		Validator valiator = new Validator();
		valiator.validate(empvo, result);
		
		String page = "redirect:tables";
		if (result.hasErrors()) {
			page = "tables";

			List<FieldError> list = result.getFieldErrors();
			if (null != result.getFieldError()) {
				for (FieldError fe : result.getFieldErrors()) {
					System.out.println("필드:" + fe.getField() + "  " + "코드:" + fe.getCode() + "  " + "오브젝트네임:"
							+ fe.getObjectName() + "  " + "리젝트벨류:" + fe.getRejectedValue() + "  " + "디폴트메시지:"
							+ fe.getDefaultMessage());

				}
			}
		}
		empservice.update(empvo);
		return page;
	}

	@GetMapping("/contentView")
	public String contentView(Model model, empVo empvo) throws Exception {
		model.addAttribute("contentView", empservice.contentView(empvo.getEmpno()));
		return "contentView";
	}

	@GetMapping("/delete")
	public String delete(empVo empvo) throws Exception {
		empservice.delete(empvo.getEmpno());
		return "redirect:tables";
	}

	@PostMapping("/modify")
	public String modify(empVo empvo) throws Exception {
		empservice.modify(empvo);
		return "redirect:tables";
	}

}
 -> EMP서비스 인터페이스
package edu.bit.emp.Service;

import java.util.List;

import edu.bit.emp.VO.deptVO;
import edu.bit.emp.VO.empVo;


public interface empService {
	
	
	public List<empVo> getListMgr();

	public List<deptVO> getListDep();

	public List<empVo> getList();

	public void update(empVo empvo) ;

	public empVo contentView(int empno);

	public void delete(int empno);

	public void modify(empVo empvo);

	public List<empVo> getempno(int empno);
	
}
 -> EMP 서비스 Implements
package edu.bit.emp.Service;

import java.util.List;

import org.springframework.stereotype.Service;

import edu.bit.emp.VO.deptVO;
import edu.bit.emp.VO.empVo;
import edu.bit.emp.mapper.empMapper;
import lombok.AllArgsConstructor;
import lombok.extern.log4j.Log4j;


@Log4j
@AllArgsConstructor
@Service
public class empServiceImpl implements empService {
	
	private empMapper mapper;

	@Override
	public List<empVo> getListMgr() {
		log.info("getListMgr");
		return mapper.getListMgr();
		
	}

	@Override
	public List<deptVO> getListDep() {
		log.info("getListDep");
		return mapper.getListDep();
	}

	@Override
	public List<empVo> getList() {
		log.info("getList");
		return mapper.getList();
	}

	@Override
	public void update(empVo empvo) {
		log.info("update");
		mapper.update(empvo);
		
	}

	@Override
	public empVo contentView(int empno) {
		log.info("contentView");
		return mapper.contentView(empno);
	}

	@Override
	public void delete(int empno) {
		log.info("delete");
		mapper.delete(empno);
		
	}

	@Override
	public void modify(empVo empvo) {
		log.info("modify");
		mapper.modify(empvo);
		
	}

	@Override
	public List<empVo> getempno(int empno) {
		log.info("empno");
		return mapper.empno(empno);
	}
}
 -> emp 매퍼
package edu.bit.emp.mapper;

import java.util.List;

import edu.bit.emp.VO.deptVO;
import edu.bit.emp.VO.empVo;

public interface empMapper {

	public List<empVo> getListMgr();

	public List<deptVO> getListDep();

	public List<empVo> getList();

	public void update(empVo empvo);

	public empVo contentView(int empno);

	public void delete(int empno);

	public void modify(empVo empvo);

	public List<empVo> empno(int empno);
		
}
 -> emp 맵퍼.xml
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="edu.bit.emp.mapper.empMapper">
	<select id="getListMgr" resultType="edu.bit.emp.VO.empVo">
		<![CDATA[
			select m.empno, m.ename from emp e, emp m where e.mgr=m.empno group by m.ename, m.empno
		]]>
	</select>
	
	<select id="getListDep" resultType="edu.bit.emp.VO.deptVO">
		<![CDATA[
			select dname,deptno from dept GROUP BY dname,deptno
		]]>
	</select>
	
	<select id="getList" resultType="edu.bit.emp.VO.empVo">
		<![CDATA[
			select * from emp
		]]>
	</select>
	
	<select id="update" resultType="edu.bit.emp.VO.empVo">
		<![CDATA[
			insert into emp values(#{empno},#{ename},#{job},#{mgr},#{hiredate},#{sal},#{comm},#{deptno})
		]]>
	</select>
	
	<select id="contentView" resultType="edu.bit.emp.VO.empVo">
		<![CDATA[
			select * from emp where empno = #{empno}
		]]>
	</select>
	
	<select id="delete" resultType="edu.bit.emp.VO.empVo">
		<![CDATA[
			delete from emp where empno=#{empno}
		]]>
	</select>
	
	<select id="modify" resultType="edu.bit.emp.VO.empVo">
		<![CDATA[
			update emp set ename=#{ename}, job=#{job}, mgr=#{mgr}, sal=#{sal}, comm =#{comm},deptno=#{deptno} where empno=#{empno}
		]]>
	</select>
	
	<select id="empno" resultType="edu.bit.emp.VO.empVo">
		<![CDATA[
			select empno from emp
		]]>
	</select>
	
	</mapper>
 ->deptVO
package edu.bit.emp.VO;

public class deptVO {
	
	private int deptno;    
	private String dname;           
	private String loc;
	
	public deptVO() {
		super();
	}

	public deptVO(int deptno, String dname, String loc) {
		super();
		this.deptno = deptno;
		this.dname = dname;
		this.loc = loc;
	}

	public int getDeptno() {
		return deptno;
	}

	public void setDeptno(int deptno) {
		this.deptno = deptno;
	}

	public String getDname() {
		return dname;
	}

	public void setDname(String dname) {
		this.dname = dname;
	}

	public String getLoc() {
		return loc;
	}

	public void setLoc(String loc) {
		this.loc = loc;
	}  
			
}
 -> empVO
package edu.bit.emp.VO;

import java.sql.Date;

public class empVo {
	
	private int empno;    //사원 번호
	private String ename; //사원이름             
	private String job;   //직급     
	private int mgr;      //매니저           
	private Date hiredate;//입사일                 
	private int sal;      //급여          
	private int comm;     //커밋           
	private int deptno;   //부서번호    
	
	
	public empVo() {
		super();
	}


	

	public empVo(int empno, String ename, String job, int mgr, Date hiredate, int sal, int comm, int deptno) {
		super();
		this.empno = empno;
		this.ename = ename;
		this.job = job;
		this.mgr = mgr;
		this.hiredate = hiredate;
		this.sal = sal;
		this.comm = comm;
		this.deptno = deptno;
	}




	public int getEmpno() {
		return empno;
	}


	public void setEmpno(int empno) {
		this.empno = empno;
	}


	public String getEname() {
		return ename;
	}


	public void setEname(String ename) {
		this.ename = ename;
	}


	public String getJob() {
		return job;
	}


	public void setJob(String job) {
		this.job = job;
	}


	public int getMgr() {
		return mgr;
	}


	public void setMgr(int mgr) {
		this.mgr = mgr;
	}


	


	public Date getHiredate() {
		return hiredate;
	}




	public void setHiredate(Date hiredate) {
		this.hiredate = hiredate;
	}




	public int getSal() {
		return sal;
	}


	public void setSal(int sal) {
		this.sal = sal;
	}


	public int getComm() {
		return comm;
	}


	public void setComm(int comm) {
		this.comm = comm;
	}


	public int getDeptno() {
		return deptno;
	}


	public void setDeptno(int deptno) {
		this.deptno = deptno;
	}				
}
 -> 벨리데이터
package edu.bit.emp.validator;

import org.springframework.validation.Errors;

import edu.bit.emp.VO.empVo;

public class Validator implements org.springframework.validation.Validator {

	@Override
	public boolean supports(Class<?> clazz) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public void validate(Object obj, Errors errors) {
		empVo empvo = (empVo)obj;
		
		int empno = empvo.getEmpno();
		String ename = empvo.getEname();
		String job = empvo.getJob();
		int sal = empvo.getSal();
		int comm = empvo.getComm();
		
		if(empno == 0 ) {
			System.out.println("empno is null or empty");
			errors.rejectValue("empno","trouble");
		}else if(ename == null || ename.trim().isEmpty()) {
			System.out.println("ename is null or empty");
			errors.rejectValue("ename","trouble");
		}else if(job == null || job.trim().isEmpty()) {
			System.out.println("job is null or empty");
			errors.rejectValue("job","trouble");
		}else if(sal == 0 ) {
			System.out.println("sal is null or empty");
			errors.rejectValue("sal","trouble");
		}else if(comm == 0 ) {
			System.out.println("comm is null or empty");
			errors.rejectValue("comm","trouble");
		}
		
	}

}

 -> tables.jsp
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<!DOCTYPE html>
<html lang="en">

<head>

  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <meta name="description" content="">
  <meta name="author" content="">

  <title>SB Admin 2 - Tables</title>

  <!-- Custom fonts for this template -->
  <link href="${pageContext.request.contextPath}/resources/sb_admin/vendor/fontawesome-free/css/all.min.css" rel="stylesheet" type="text/css">
  <link href="${pageContext.request.contextPath}/resources/sb_admin/https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i" rel="stylesheet">

  <!-- Custom styles for this template -->
  <link href="${pageContext.request.contextPath}/resources/sb_admin/css/sb-admin-2.min.css" rel="stylesheet">

  <!-- Custom styles for this page -->
  <link href="${pageContext.request.contextPath}/resources/sb_admin/vendor/datatables/dataTables.bootstrap4.min.css" rel="stylesheet">

</head>

<body id="page-top">

  <!-- Page Wrapper -->
  <div id="wrapper">

    <!-- Sidebar -->
    <ul class="navbar-nav bg-gradient-primary sidebar sidebar-dark accordion" id="accordionSidebar">

      <!-- Sidebar - Brand -->
      <a class="sidebar-brand d-flex align-items-center justify-content-center" href="index.html">
        <div class="sidebar-brand-icon rotate-n-15">
          <i class="fas fa-laugh-wink"></i>
        </div>
        <div class="sidebar-brand-text mx-3">SB Admin <sup>2</sup></div>
      </a>

      <!-- Divider -->
      <hr class="sidebar-divider my-0">

      <!-- Nav Item - Dashboard -->
      <li class="nav-item">
        <a class="nav-link" href="index.html">
          <i class="fas fa-fw fa-tachometer-alt"></i>
          <span>Dashboard</span></a>
      </li>

      <!-- Divider -->
      <hr class="sidebar-divider">

      <!-- Heading -->
      <div class="sidebar-heading">
        Interface
      </div>

      <!-- Nav Item - Pages Collapse Menu -->
      <li class="nav-item">
        <a class="nav-link collapsed" href="#" data-toggle="collapse" data-target="#collapseTwo" aria-expanded="true" aria-controls="collapseTwo">
          <i class="fas fa-fw fa-cog"></i>
          <span>Components</span>
        </a>
        <div id="collapseTwo" class="collapse" aria-labelledby="headingTwo" data-parent="#accordionSidebar">
          <div class="bg-white py-2 collapse-inner rounded">
            <h6 class="collapse-header">Custom Components:</h6>
            <a class="collapse-item" href="buttons.html">Buttons</a>
            <a class="collapse-item" href="cards.html">Cards</a>
          </div>
        </div>
      </li>

      <!-- Nav Item - Utilities Collapse Menu -->
      <li class="nav-item">
        <a class="nav-link collapsed" href="#" data-toggle="collapse" data-target="#collapseUtilities" aria-expanded="true" aria-controls="collapseUtilities">
          <i class="fas fa-fw fa-wrench"></i>
          <span>Utilities</span>
        </a>
        <div id="collapseUtilities" class="collapse" aria-labelledby="headingUtilities" data-parent="#accordionSidebar">
          <div class="bg-white py-2 collapse-inner rounded">
            <h6 class="collapse-header">Custom Utilities:</h6>
            <a class="collapse-item" href="utilities-color.html">Colors</a>
            <a class="collapse-item" href="utilities-border.html">Borders</a>
            <a class="collapse-item" href="utilities-animation.html">Animations</a>
            <a class="collapse-item" href="utilities-other.html">Other</a>
          </div>
        </div>
      </li>

      <!-- Divider -->
      <hr class="sidebar-divider">

      <!-- Heading -->
      <div class="sidebar-heading">
        Addons
      </div>

      <!-- Nav Item - Pages Collapse Menu -->
      <li class="nav-item">
        <a class="nav-link collapsed" href="#" data-toggle="collapse" data-target="#collapsePages" aria-expanded="true" aria-controls="collapsePages">
          <i class="fas fa-fw fa-folder"></i>
          <span>Pages</span>
        </a>
        <div id="collapsePages" class="collapse" aria-labelledby="headingPages" data-parent="#accordionSidebar">
          <div class="bg-white py-2 collapse-inner rounded">
            <h6 class="collapse-header">Login Screens:</h6>
            <a class="collapse-item" href="login.html">Login</a>
            <a class="collapse-item" href="register.html">Register</a>
            <a class="collapse-item" href="forgot-password.html">Forgot Password</a>
            <div class="collapse-divider"></div>
            <h6 class="collapse-header">Other Pages:</h6>
            <a class="collapse-item" href="404.html">404 Page</a>
            <a class="collapse-item" href="blank.html">Blank Page</a>
          </div>
        </div>
      </li>

      <!-- Nav Item - Charts -->
      <li class="nav-item">
        <a class="nav-link" href="charts.html">
          <i class="fas fa-fw fa-chart-area"></i>
          <span>Charts</span></a>
      </li>

      <!-- Nav Item - Tables -->
      <li class="nav-item active">
        <a class="nav-link" href="tables.html">
          <i class="fas fa-fw fa-table"></i>
          <span>Tables</span></a>
      </li>

      <!-- Divider -->
      <hr class="sidebar-divider d-none d-md-block">

      <!-- Sidebar Toggler (Sidebar) -->
      <div class="text-center d-none d-md-inline">
        <button class="rounded-circle border-0" id="sidebarToggle"></button>
      </div>

    </ul>
    <!-- End of Sidebar -->

    <!-- Content Wrapper -->
    <div id="content-wrapper" class="d-flex flex-column">

      <!-- Main Content -->
      <div id="content">

        <!-- Topbar -->
        <nav class="navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow">

          <!-- Sidebar Toggle (Topbar) -->
          <button id="sidebarToggleTop" class="btn btn-link d-md-none rounded-circle mr-3">
            <i class="fa fa-bars"></i>
          </button>

          <!-- Topbar Search -->
          <form class="d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100 navbar-search">
            <div class="input-group">
              <input type="text" class="form-control bg-light border-0 small" placeholder="Search for..." aria-label="Search" aria-describedby="basic-addon2">
              <div class="input-group-append">
                <button class="btn btn-primary" type="button">
                  <i class="fas fa-search fa-sm"></i>
                </button>
              </div>
            </div>
          </form>

          <!-- Topbar Navbar -->
          <ul class="navbar-nav ml-auto">

            <!-- Nav Item - Search Dropdown (Visible Only XS) -->
            <li class="nav-item dropdown no-arrow d-sm-none">
              <a class="nav-link dropdown-toggle" href="#" id="searchDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                <i class="fas fa-search fa-fw"></i>
              </a>
              <!-- Dropdown - Messages -->
              <div class="dropdown-menu dropdown-menu-right p-3 shadow animated--grow-in" aria-labelledby="searchDropdown">
                <form class="form-inline mr-auto w-100 navbar-search">
                  <div class="input-group">
                    <input type="text" class="form-control bg-light border-0 small" placeholder="Search for..." aria-label="Search" aria-describedby="basic-addon2">
                    <div class="input-group-append">
                      <button class="btn btn-primary" type="button">
                        <i class="fas fa-search fa-sm"></i>
                      </button>
                    </div>
                  </div>
                </form>
              </div>
            </li>

            <!-- Nav Item - Alerts -->
            <li class="nav-item dropdown no-arrow mx-1">
              <a class="nav-link dropdown-toggle" href="#" id="alertsDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                <i class="fas fa-bell fa-fw"></i>
                <!-- Counter - Alerts -->
                <span class="badge badge-danger badge-counter">3+</span>
              </a>
              <!-- Dropdown - Alerts -->
              <div class="dropdown-list dropdown-menu dropdown-menu-right shadow animated--grow-in" aria-labelledby="alertsDropdown">
                <h6 class="dropdown-header">
                  Alerts Center
                </h6>
                <a class="dropdown-item d-flex align-items-center" href="#">
                  <div class="mr-3">
                    <div class="icon-circle bg-primary">
                      <i class="fas fa-file-alt text-white"></i>
                    </div>
                  </div>
                  <div>
                    <div class="small text-gray-500">December 12, 2019</div>
                    <span class="font-weight-bold">A new monthly report is ready to download!</span>
                  </div>
                </a>
                <a class="dropdown-item d-flex align-items-center" href="#">
                  <div class="mr-3">
                    <div class="icon-circle bg-success">
                      <i class="fas fa-donate text-white"></i>
                    </div>
                  </div>
                  <div>
                    <div class="small text-gray-500">December 7, 2019</div>
                    $290.29 has been deposited into your account!
                  </div>
                </a>
                <a class="dropdown-item d-flex align-items-center" href="#">
                  <div class="mr-3">
                    <div class="icon-circle bg-warning">
                      <i class="fas fa-exclamation-triangle text-white"></i>
                    </div>
                  </div>
                  <div>
                    <div class="small text-gray-500">December 2, 2019</div>
                    Spending Alert: We've noticed unusually high spending for your account.
                  </div>
                </a>
                <a class="dropdown-item text-center small text-gray-500" href="#">Show All Alerts</a>
              </div>
            </li>

            <!-- Nav Item - Messages -->
            <li class="nav-item dropdown no-arrow mx-1">
              <a class="nav-link dropdown-toggle" href="#" id="messagesDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                <i class="fas fa-envelope fa-fw"></i>
                <!-- Counter - Messages -->
                <span class="badge badge-danger badge-counter">7</span>
              </a>
              <!-- Dropdown - Messages -->
              <div class="dropdown-list dropdown-menu dropdown-menu-right shadow animated--grow-in" aria-labelledby="messagesDropdown">
                <h6 class="dropdown-header">
                  Message Center
                </h6>
                <a class="dropdown-item d-flex align-items-center" href="#">
                  <div class="dropdown-list-image mr-3">
                    <img class="rounded-circle" src="https://source.unsplash.com/fn_BT9fwg_E/60x60" alt="">
                    <div class="status-indicator bg-success"></div>
                  </div>
                  <div class="font-weight-bold">
                    <div class="text-truncate">Hi there! I am wondering if you can help me with a problem I've been having.</div>
                    <div class="small text-gray-500">Emily Fowler Â· 58m</div>
                  </div>
                </a>
                <a class="dropdown-item d-flex align-items-center" href="#">
                  <div class="dropdown-list-image mr-3">
                    <img class="rounded-circle" src="https://source.unsplash.com/AU4VPcFN4LE/60x60" alt="">
                    <div class="status-indicator"></div>
                  </div>
                  <div>
                    <div class="text-truncate">I have the photos that you ordered last month, how would you like them sent to you?</div>
                    <div class="small text-gray-500">Jae Chun Â· 1d</div>
                  </div>
                </a>
                <a class="dropdown-item d-flex align-items-center" href="#">
                  <div class="dropdown-list-image mr-3">
                    <img class="rounded-circle" src="https://source.unsplash.com/CS2uCrpNzJY/60x60" alt="">
                    <div class="status-indicator bg-warning"></div>
                  </div>
                  <div>
                    <div class="text-truncate">Last month's report looks great, I am very happy with the progress so far, keep up the good work!</div>
                    <div class="small text-gray-500">Morgan Alvarez Â· 2d</div>
                  </div>
                </a>
                <a class="dropdown-item d-flex align-items-center" href="#">
                  <div class="dropdown-list-image mr-3">
                    <img class="rounded-circle" src="https://source.unsplash.com/Mv9hjnEUHR4/60x60" alt="">
                    <div class="status-indicator bg-success"></div>
                  </div>
                  <div>
                    <div class="text-truncate">Am I a good boy? The reason I ask is because someone told me that people say this to all dogs, even if they aren't good...</div>
                    <div class="small text-gray-500">Chicken the Dog Â· 2w</div>
                  </div>
                </a>
                <a class="dropdown-item text-center small text-gray-500" href="#">Read More Messages</a>
              </div>
            </li>

            <div class="topbar-divider d-none d-sm-block"></div>

            <!-- Nav Item - User Information -->
            <li class="nav-item dropdown no-arrow">
              <a class="nav-link dropdown-toggle" href="#" id="userDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                <span class="mr-2 d-none d-lg-inline text-gray-600 small">Valerie Luna</span>
                <img class="img-profile rounded-circle" src="https://source.unsplash.com/QAB-WJcbgJk/60x60">
              </a>
              <!-- Dropdown - User Information -->
              <div class="dropdown-menu dropdown-menu-right shadow animated--grow-in" aria-labelledby="userDropdown">
                <a class="dropdown-item" href="#">
                  <i class="fas fa-user fa-sm fa-fw mr-2 text-gray-400"></i>
                  Profile
                </a>
                <a class="dropdown-item" href="#">
                  <i class="fas fa-cogs fa-sm fa-fw mr-2 text-gray-400"></i>
                  Settings
                </a>
                <a class="dropdown-item" href="#">
                  <i class="fas fa-list fa-sm fa-fw mr-2 text-gray-400"></i>
                  Activity Log
                </a>
                <div class="dropdown-divider"></div>
                <a class="dropdown-item" href="#" data-toggle="modal" data-target="#logoutModal">
                  <i class="fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400"></i>
                  Logout
                </a>
              </div>
            </li>

          </ul>

        </nav>
        <!-- End of Topbar -->

        <!-- Begin Page Content -->
        <div class="container-fluid">

          <!-- Page Heading -->
          <h1 class="h3 mb-2 text-gray-800">Tables</h1>
          <p class="mb-4">DataTables is a third party plugin that is used to generate the demo table below. For more information about DataTables, please visit the <a target="_blank" href="https://datatables.net">official DataTables documentation</a>.</p>




          <!-- DataTales Example -->
          <div class="card shadow mb-4">
            <div class="card-header py-3">
              <h6 class="m-0 font-weight-bold text-primary">EMP tables</h6>
            </div>
            <div class="card-body">
              <div class="table-responsive">
                <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                  <thead>
                    <tr>
                      <th>사원번호</th>
                      <th>사원이름</th>
                      <th>직급</th>
                      <th>상사</th>
                      <th>입사일</th>
                      <th>급여</th>
                      <th>커미션 </th>
                      <th>부서번호</th>
                    </tr>
                  </thead>
                  <tfoot>
                    <tr>
                      <th>사원번호</th>
                      <th>사원이름</th>
                      <th>직급</th>
                      <th>상사</th>
                      <th>입사일</th>
                      <th>급여</th>
                      <th>커미션 </th>
                      <th>부서번호</th>
                    </tr>
                  </tfoot>
                  <tbody>
                        </tr>
		<c:forEach items= "${list }" var="vo">
		<tr>
			<td> <a href="contentView?empno=${vo.empno }">${vo.empno }</a> </td>
			<td> ${vo.ename }</td>
			<td> ${vo.job }</td>
			<td> ${vo.mgr }</td>
			<td> ${vo.hiredate }</td>
			<td> ${vo.sal }</td>
			<td> ${vo.comm }</td>
			<td> ${vo.deptno }</td>
			
			
		</tr>
		</c:forEach>
                  </tbody>
            
                </table>
                 <a href="employInput">글작성</a>
              </div>
            </div>
          </div>

        </div>
        <!-- /.container-fluid -->

      </div>
      <!-- End of Main Content -->

      <!-- Footer -->
      <footer class="sticky-footer bg-white">
        <div class="container my-auto">
          <div class="copyright text-center my-auto">
            <span>Copyright &copy; Your Website 2019</span>
          </div>
        </div>
      </footer>
      <!-- End of Footer -->

    </div>
    <!-- End of Content Wrapper -->

  </div>
  <!-- End of Page Wrapper -->

  <!-- Scroll to Top Button-->
  <a class="scroll-to-top rounded" href="#page-top">
    <i class="fas fa-angle-up"></i>
  </a>

  <!-- Logout Modal-->
  <div class="modal fade" id="logoutModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="exampleModalLabel">Ready to Leave?</h5>
          <button class="close" type="button" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">Ã</span>
          </button>
        </div>
        <div class="modal-body">Select "Logout" below if you are ready to end your current session.</div>
        <div class="modal-footer">
          <button class="btn btn-secondary" type="button" data-dismiss="modal">Cancel</button>
          <a class="btn btn-primary" href="login.html">Logout</a>
        </div>
      </div>
    </div>
  </div>

  <!-- Bootstrap core JavaScript-->
  <script src="vendor/jquery/jquery.min.js"></script>
  <script src="vendor/bootstrap/js/bootstrap.bundle.min.js"></script>

  <!-- Core plugin JavaScript-->
  <script src="vendor/jquery-easing/jquery.easing.min.js"></script>

  <!-- Custom scripts for all pages-->
  <script src="js/sb-admin-2.min.js"></script>

  <!-- Page level plugins -->
  <script src="vendor/datatables/jquery.dataTables.min.js"></script>
  <script src="vendor/datatables/dataTables.bootstrap4.min.js"></script>

  <!-- Page level custom scripts -->
  <script src="js/demo/datatables-demo.js"></script>

</body>

</html>

 -> 사원 정보 입력 폼 jsp
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>employ input</title>
	<script type="text/javascript">
	
	function check() {
		var empnoCheck = document.getElementById("empnoCheck").value;
		<c:forEach items="${empno }" var="check">
		if(empnoCheck==${check.empno}){
			alert("중복된 사원번호 입니다.")
			return false;
		}else if(empnoCheck>5){
			alert("사원번호는 4자리까지 입력 가능합니다.")			
			return false;			
		}
		</c:forEach>
	}
	
	window.onload = function() {
		var inputCheck = document.getElementById("inputcheck");
		
		inputCheck.onsubmit = function(){
		var enameCheck = document.getElementById("enameCheck").value;
		if(enameCheck == null){
			alert("공백입니다.")
			return false;
		}
		
		var jobCheck = document.getElementById("jobCheck").value;
		if(jobCheck == null){
			alert("공백입니다.")
			return false;
		}
		
		var salCheck = document.getElementById("salCheck").value;
		if(salCheck == null){
			alert("공백입니다.")
			return false;
		}
		
		var commCheck = document.getElementById("commCheck").value;
		if(commCheck == null){
			alert("공백입니다.")
			return false;
		}
		
		var deptnoCheck = document.getElementById("deptnoCheck").value;
		if(deptnoCheck == null){
			alert("공백입니다.")
			return false;
		}
		}
		
	}
	
	
	</script>
	
	
</head>
<body>	
	<h1> 사원 정보 입력</h1>
	<hr>
	<form id="inputcheck" action="update" method="post">
		사원번호 <input type="text" name="empno" id ="empnoCheck"> <input type="button" onclick="check()" value="중복체크"> <br>
		사원이름 <input type="text" name="ename" id ="enameCheck"> <br>
		사원직급 <input type="text" name="job" id ="jobCheck"> <br>
		매니저 <select name="mgr" id ="mgrCheck">
		<c:forEach items="${listMgr }" var="vo">
			<option value="${vo.empno }">(${vo.empno })${vo.ename } </option>
			</c:forEach>
		</select><br>
		입사일 <input type="date" name="hiredate" id ="dateCheck"> <br>
		급여 <input type="text" name="sal" id ="salCheck"> <br>
		커미션 <input type="text" name="comm" id ="commCheck"><br>
		부서 <select name="deptno" id ="deptnoCheck">
			<c:forEach items="${listDep }" var="vo">
			<option value="${vo.deptno }">(${vo.deptno })${vo.dname } </option>
			</c:forEach>
		
		</select><br>
		<input id="subCheck" type="submit" value="입력"> <a href="tables">돌아가기</a>
	</form>
		

</body>
</html>


- 2. 페이징 -

 -> 컨트롤러
package edu.bit.ex.PagingController;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;

import edu.bit.ex.VO.PagingVO;
import edu.bit.ex.service.PagingService;
import lombok.AllArgsConstructor;
import lombok.extern.log4j.Log4j;

@Log4j
@AllArgsConstructor
@Controller
public class pagingController {
	
	private PagingService service;
	
	@GetMapping("/list")
	public String List(PagingVO vo, Model model,@RequestParam(value = "nowPage", required = false)String nowPage
			,@RequestParam(value = "cntPerPage", required = false)String cntPerPage) {
		log.info("pagingList");
		int total = service.countBoard();
		if(nowPage == null && cntPerPage ==null) {
			nowPage ="1";
			cntPerPage = "5";
		}else if(nowPage == null) {
			nowPage = "1";
		}else if(cntPerPage == null) {
			cntPerPage = "5";
		}
		
		vo = new PagingVO(total, Integer.parseInt(nowPage), Integer.parseInt(cntPerPage));
		model.addAttribute("paging", vo);
		model.addAttribute("viewAll", service.selectBoard(vo));
		return "Paging";
	}

}
 -> 서비스 인터페이스
package edu.bit.ex.service;

import java.util.List;

import edu.bit.ex.VO.BoardVO;
import edu.bit.ex.VO.PagingVO;

public interface PagingService {
	
	public int countBoard();
	public List<BoardVO> selectBoard(PagingVO vo); 
}
-> 서비스 인터페이스 implements
package edu.bit.ex.service;

import java.util.List;

import org.springframework.stereotype.Service;

import edu.bit.ex.VO.BoardVO;
import edu.bit.ex.VO.PagingVO;
import edu.bit.ex.mapper.PagingMapper;
import lombok.AllArgsConstructor;
import lombok.extern.log4j.Log4j;

@Log4j
@Service
@AllArgsConstructor
public class PagingImplService implements PagingService{

	private PagingMapper mapper;
	
	@Override
	public int countBoard() {
		log.info("countBoard");
		return mapper.countBoard();
	}

	@Override
	public List<BoardVO> selectBoard(PagingVO vo) {
		log.info("selectBoard");
		return mapper.selectBoard(vo);
	}

}
 -> 맵퍼
package edu.bit.ex.mapper;

import java.util.List;

import edu.bit.ex.VO.BoardVO;
import edu.bit.ex.VO.PagingVO;

public interface PagingMapper {

	int countBoard();

	List<BoardVO> selectBoard(PagingVO vo);

}
 -> 맵퍼.xml
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="edu.bit.ex.mapper.PagingMapper">

	<select id="countBoard" resultType="int">
		<![CDATA[
			SELECT COUNT(*) FROM MVC_BOARD
		]]>
	</select>

	<!-- 페이징 처리 후 게시글 조회 -->
	<select id="selectBoard" resultType="edu.bit.ex.VO.BoardVO">
		<![CDATA[
			SELECT * 
				FROM (
					SELECT ROWNUM RN, A.* 
						FROM (
								select bId, nName, bTitle, bContent, bDate, bHit, bGroup, bStep, bIndent from mvc_board order by bGroup desc, bStep asc
								) A
						)
			WHERE RN BETWEEN #{start} AND #{end}
		]]>		
	</select>
	
	
	</mapper>
 -> VO (MVC_Board)
package edu.bit.ex.VO;

import java.sql.Date;

public class BoardVO {
	
	
	private int bId;      
	private String nName;             
	private String bTitle;            
	private String bContent;         
	private Date bDate;                    
	private int bHit;               
	private int bGroup;            
	private int bStep;             
	private int bIndent;
	
	public BoardVO() {
		super();
	}

	public BoardVO(int bId, String nName, String bTitle, String bContent, Date bDate, int bHit, int bGroup, int bStep,
			int bIndent) {
		super();
		this.bId = bId;
		this.nName = nName;
		this.bTitle = bTitle;
		this.bContent = bContent;
		this.bDate = bDate;
		this.bHit = bHit;
		this.bGroup = bGroup;
		this.bStep = bStep;
		this.bIndent = bIndent;
	}

	public int getbId() {
		return bId;
	}

	public void setbId(int bId) {
		this.bId = bId;
	}

	public String getnName() {
		return nName;
	}

	public void setnName(String nName) {
		this.nName = nName;
	}

	public String getbTitle() {
		return bTitle;
	}

	public void setbTitle(String bTitle) {
		this.bTitle = bTitle;
	}

	public String getbContent() {
		return bContent;
	}

	public void setbContent(String bContent) {
		this.bContent = bContent;
	}

	public Date getbDate() {
		return bDate;
	}

	public void setbDate(Date bDate) {
		this.bDate = bDate;
	}

	public int getbHit() {
		return bHit;
	}

	public void setbHit(int bHit) {
		this.bHit = bHit;
	}

	public int getbGroup() {
		return bGroup;
	}

	public void setbGroup(int bGroup) {
		this.bGroup = bGroup;
	}

	public int getbStep() {
		return bStep;
	}

	public void setbStep(int bStep) {
		this.bStep = bStep;
	}

	public int getbIndent() {
		return bIndent;
	}

	public void setbIndent(int bIndent) {
		this.bIndent = bIndent;
	}   
	
	
	

}
 -> 페이징 VO
package edu.bit.ex.VO;

public class PagingVO {
	
	private int nowPage; //현재페이지
	private int startPage; //시작페이지
	private int endPage; //마지막페이지
	private int total; //게시글 총 갯수
	private int cntPerPage; //페이지당 글 갯수
	private int lastPage; //마지막페이지
	private int start; //쿼리에 사용할 start
	private int end; //쿼리에 사용할 end
	private int cntPage = 5;
	
	
	public PagingVO() {
		super();
	}
	
	public PagingVO(int total, int nowPage, int cntPerPage) {
		setNowPage(nowPage);
		setCntPerPage(cntPerPage);
		setTotal(total);
		calcLastPage(getTotal(), getCntPerPage());
		calcStartEndPage(getNowPage(), cntPage);
		calcStartEnd(getNowPage(), getCntPerPage());
	}
	
	public void calcLastPage(int total, int cntPerPage) { //가장 마지막 페이지 계산
		setLastPage((int)Math.ceil((double)total / (double)cntPerPage));
	}
	
	public void calcStartEndPage(int nowPage, int cntPage) { //시작, 끝 페이지 계산
		setEndPage(((int)Math.ceil((double)nowPage / (double)cntPage)) * cntPage);
		if(getLastPage() < getEndPage()) {
			setEndPage(getLastPage());
		}
		setStartPage(getEndPage() - cntPage +1);
		if(getStartPage() < 1) {
			setStartPage(1);
		}
	}
	
	public void calcStartEnd(int nowPage, int cntPerPage) { //디비 쿼리에 사용할 start, end값 계산
		setEnd(nowPage * cntPerPage);
		setStart(getEnd() - cntPerPage +1);
	}


	public int getNowPage() {
		return nowPage;
	}


	public void setNowPage(int nowPage) {
		this.nowPage = nowPage;
	}


	public int getStartPage() {
		return startPage;
	}


	public void setStartPage(int startPage) {
		this.startPage = startPage;
	}


	public int getEndPage() {
		return endPage;
	}


	public void setEndPage(int endPage) {
		this.endPage = endPage;
	}


	public int getTotal() {
		return total;
	}


	public void setTotal(int total) {
		this.total = total;
	}


	public int getCntPerPage() {
		return cntPerPage;
	}


	public void setCntPerPage(int cntPerPage) {
		this.cntPerPage = cntPerPage;
	}


	public int getLastPage() {
		return lastPage;
	}


	public void setLastPage(int lastPage) {
		this.lastPage = lastPage;
	}


	public int getStart() {
		return start;
	}


	public void setStart(int start) {
		this.start = start;
	}


	public int getEnd() {
		return end;
	}


	public void setEnd(int end) {
		this.end = end;
	}


	public int getCntPage() {
		return cntPage;
	}


	public void setCntPage(int cntPage) {
		this.cntPage = cntPage;
	}
	
	
	@Override
	public String toString() {
		return "PagingVO [nowPage=" + nowPage + ", startPage=" + startPage + ", endPage=" + endPage + ", total=" + total
				+ ", cntPerPage=" + cntPerPage + ", lastPage=" + lastPage + ", start=" + start + ", end=" + end
				+ ", cntPage=" + cntPage + "]";
	}
	

}
 -> 페이징 JSP
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>
<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>게시판 목록</title>
</head>
<style>
	h2 {
		text-align: center;
	}
	table {
		width: 100%;
	}
	#outter {
		display: block;
		width: 60%;
		margin: auto;
	}
	a {
		text-decoration: none;
	}
</style>
<script>
	function selChange() {
		var sel = document.getElementById('cntPerPage').value;
		location.href="list?nowPage=${paging.nowPage}&cntPerPage="+sel;
	}
</script>
<body>
<h2>게시판</h2>

<div id="outter">
	<div style="float: right;">
		<select id="cntPerPage" name="sel" onchange="selChange()">
			<option value="5"
				<c:if test="${paging.cntPerPage == 5}">selected</c:if>>5줄 보기</option>
			<option value="10"
				<c:if test="${paging.cntPerPage == 10}">selected</c:if>>10줄 보기</option>
			<option value="15"
				<c:if test="${paging.cntPerPage == 15}">selected</c:if>>15줄 보기</option>
			<option value="20"
				<c:if test="${paging.cntPerPage == 20}">selected</c:if>>20줄 보기</option>
		</select>
	</div> <!-- 옵션선택 끝 -->
	<table border="1">
		<tr>
			<td>번호</td>
			<td>이름</td>
			<td>제목</td>
			<td>날짜</td>
			<td>히트</td>		
		</tr>
		<c:forEach items="${viewAll }" var="list">
			<tr>
				<td>${list.bId }</td>
				<td>${list.nName }</td>
				<td>${list.bTitle }</td>
				<td><fmt:formatDate value="${list.bDate }" pattern="yyyy.MM.dd"/> </td>
				<td>${list.bHit }</td>
			</tr>
		</c:forEach>
	</table>
	<input type="button" value="글쓰기" style="float: right;" onclick="location.href='/write'"><br>
	
	<div style="display: block; text-align: center;">	
		
		<c:if test="${paging.startPage != 1 }">
			<a href="list?nowPage=${paging.startPage - 1 }&cntPerPage=${paging.cntPerPage}">이전</a>
		</c:if>
		
		<c:forEach begin="${paging.startPage }" end="${paging.endPage }" var="p">
			<c:choose>
				<c:when test="${p == paging.nowPage }">
					<b>${p }</b>
				</c:when>
				<c:when test="${p != paging.nowPage }">
					<a href="list?nowPage=${p }&cntPerPage=${paging.cntPerPage}">${p }</a>
				</c:when>
			</c:choose>
		</c:forEach>
		
		<c:if test="${paging.endPage != paging.lastPage}">
			<a href="list?nowPage=${paging.endPage+1 }&cntPerPage=${paging.cntPerPage}">다음</a>
		</c:if>
	</div>
</div>
</body>
</html>

