1.키워드란 무엇인가?
특정 용도로 사용하기위해 자바에서 미리 선언해둔 예약어 ex) public, static, void, int, double, char, String 등등......

2.2의 보수법이란?
어떠한 정수를 2진수로 변환하여 1의 보수를 취한후 1을 더하는법

3.컴퓨터에서 음의 정수 표현방법에 대하여 설명하시오.
양의 정수에서 2진수로 변환후 2의보수를 취한다.

4. -5가 컴퓨터에서의 2진수 값을 나타내시오.
5(2) = 101, -5(2) = 011

5.실수에서 오차가 생기는 원인은 무엇인가?
실수와 실수 사이에는 무한에 가까운 실수들이 존재한다. 따라서 실수는 무한하지만 유한한 메모리에 올려야 하기때문에
범위를 지정하여 근사값을 추정하는 방법을 사용하기 때문에 오차가 발생한다.

6.실수의 표현법은(고정소수법, 부동소수법)을 설명하시오.
부동소수법은 부호비트, 가수부, 지수부로 표현가능
고정소수는 정수부와 소수부로 표현

7.정밀도란 무엇인가요?
실수의 소수점 아래를 표현할 수 있는 범위 따라서 float보다 double의 정밀도가 더높고 보정값이 길기때문에 float보다 double을 권장함
하지만 연산시에는 보정이 안된다.

8.상수란 무엇이며 변수와의 차이는?
상수란 값이 변하지 않는 수이며 딱 한번만 초기화 할 수 있다.
보통 값이 변하면 안되는수를 상수로 표현한다. 선언시 데이터 타입앞에 final을 추가, 변수명을 대문자로 선언하는것이 관습 ex) final int NUM = 100;
변수는 언제든지 값을 바꿀 수 있다.

9.초기화란 무엇인가?
가장 처음 값을 대입하는 행위

10.리터럴이란 무엇인가요?
자료형을 기반으로 표현하는 상수이며
정수의 기본 리터럴은 int이며 실수의 기본 리터럴은 double이다. 따라서 기본 리터럴의 범위를 넘어가게 된다면 형변환을 해야 한다.
값 앞에 0이오면 8진수, 0x가 오면 16진수, ob가 오면 2진수 아무것도 없으면 10진수로 표현가능

11.아래의 내용이 에러가 나는 이유와 수정방법은?
System.out.println(3147483647 + 3147483648);

정수 리터럴의 기본은 int이며 int의 크기는 -21억~21억 사이 따라서 21억의 범위를 넘어가기 때문에 에러가 발생, 
숫자뒤에 L을 붙여 long타입으로 형변환(캐스팅)하여 오류 해결

12.자동 형변환과 명시적 형변환에 대하여 설명하시오.
자동 형변환이란 큰 범위의 데이터타입을 가지고 있는 값을 작은 데이터 타입에 대입해야할때 자동적으로 큰 데이터 타입의 크기로 바뀌는 것
다만 float와 long타입의 경우 float로 형변환이 된다. 이유는 실수의 표현범위가 더욱 크고 long으로 형변환시 소수점 손실이 일어나기 때문이다.
따라서 int<long<float<double 순이다.
명시적 형변환이란 프로그래머가 직접 어떠한 타입인지 명시해주는 행위 ex) (double), (int), (short) ......
하지만 큰타입을 작은타입으로 명시적 형변환시 데이터 손실이 일어나기 때문에 주의해야한다. ex) long->int, double ->float

13.아래의 에러가 나는 이유를 설명하고 수정하시오.
    	int a = 3;
    	int b = 4;
    	
    	double result = a / b; // a/b를 연산할때 정수형으로 연산을 하기때문에 0이 result로 대입된다.
    			    // 따라서 a나b중 하나를 (double)로 명시적 형변환을 하거나 a와b를 double로 선언해야한다.
    	System.out.println(result);

14.이스퀘이프 시퀀스의 종류를 나열하고 기능을 설명하시오.
\b : 백스페이스 , \t : 텝 한번, \n : 개행, \r : 맨앞의 글자를 대체하고 개행, \' : 작은따옴표, \"큰따옴표, \\ : 백슬래쉬

15.아래의 출력결과를 확인하고, 130이 나오는 이유를 설명하시오.
System.out.println('A' + 'A');
대문자 A의 아스키코드 값은 65이며 65가 게모리에 올라가게 되며 이를 연산하기 때문에 130이 출력된다.
