1.throws 에 대하여 설명하시오.
ex) void md1() throws IOException(){
	md()2;
	} //예외를 넘긴다고 명시
던지는 주체가 중요! 함수를 호출한 함수에게 던진다.

2.아래가 컴파일 에러가 나는 이유에 대하여 설명하시오.
try {
        	int num = 6 / 0;
        	
        	
		} catch (Exception e) {
			e.printStackTrace();
		} catch (InputMismatchException e) {
			e.printStackTrace();
		}
Exception은 최상위 클래스로 이미 선언되었다. 하지만 InputMismatchException는 Exception의 하위클래스로
다형성에서 위배된다. 

3.try with resource 에 대하여 설명하시오.
resource -> 객체를 의미 
close를 대신 해준다.

4.equals 함수에 대하여 설명하시오.
ex) num1.equals(num2); num1의 주소와 num2의 주소를 비교 (다형성)
num1 ->1000번지
num2-> 2000번지 라면 equals 메소드가 실행되면 object타입의 obj 방이 생성되며 obj에 2000번지가 저장 
따라서 1000번지와 2000번지 를 비교하여 boolean타입으로 리턴

5. 과일, 사과, 배, 포도를 표현한 클래스를 만들고 이들 간의 관계를 고려하여 하나의 클래스를 추상 클래스로 만들어
 메소드 print()를 구현하고 다음과 같은 소스와 결과가 나오도록 클래스를 작성하시오.

- 소스

Fruit fAry[] = {new Grape(), new Apple(), new Pear());

for(Fruit f : fAry)

f.print();

-  결과

나는 포도이다.
나는 사과이다.
나는 배이다.

package java_20_12_16;

public class FruitMain {

	public static void main(String[] args) {

		Fruit fAry[] = { new Grape(), new Apple(), new Pear() };

		for (Fruit f : fAry) {
			f.print();
		}

	}

}

package java_20_12_16;

abstract public class Fruit {
	
	abstract void print();
}


class Grape extends Fruit{

	@Override
	public void print() {
		
		System.out.println("나는 포도이다.");
	}
	
}

class Apple extends Fruit{

	@Override
	public void print() {
		
		System.out.println("나는 사과이다.");
	}
	
}

class Pear extends Fruit{

	@Override
	public void print() {
		
		System.out.println("나는 배이다.");
	}
	
}





6. 다음 조건을 만족하도록 클래스 Person과 Student를 작성하시오.
- 클래스 Person
* 필드 : 이름, 나이, 주소 선언
- 클래스 Student
* 필드 : 학교명, 학과, 학번, 8개 평균평점을 저장할 배열로 선언
* 생성자 : 학교명, 학과, 학번 지정
* 메소드 average() : 8개 학기 평균평점의 평균을 반환
- 클레스 Person과 Student 프로그램 테스트 프로그램의 결과 : 8개 학기의 평균평점은 표준입력으로 받도록한다.

이름 : 김다정
나이 : 20
주소 : 서울시 관악구
학교 : 동양서울대학교
학과 : 전산정보학과
학번 : 20132222

----------------------------------------

8학기 학점을 순서대로 입력하세요

1학기 학점  → 3.37
2학기 학점  → 3.89
3학기 학점  → 4.35
4학기 학점  → 3.76
5학기 학점  → 3.89
6학기 학점  → 4.26
7학기 학점  → 4.89
8학기 학점  → 3.89 

----------------------------------------

8학기 총 평균 평점은 4.0375점입니다.

package java_20_12_16;

import java.util.Scanner;

public class PersonStudent {

	public static void main(String[] args) {

		Scanner sc = new Scanner(System.in);

		int age;
		String name, address, schoolName, department, studentId;

		System.out.print("이름 : ");
		name = sc.next();

		System.out.print("나이 : ");
		age = sc.nextInt();

		System.out.print("주소 : ");
		address = sc.next();
		sc.nextLine();

		System.out.print("학교 : ");
		schoolName = sc.next();

		System.out.print("학과 : ");
		department = sc.next();

		System.out.print("학번 : ");
		studentId = sc.next();

		Person park = new Student(schoolName, department, studentId, age, schoolName, address);
		Student park1 = (Student) park;

		System.out.println("8학기 학점을 순서대로 입력하세요.");
		park1.setAvg();

		System.out.printf("8학기 총 평균 평점은 %.4f점 입니다.", park1.Avg());
		sc.close();

	}

}


package java_20_12_16;

public class Person {
	private int age;
	private String name, address;

	public Person(int age, String name, String address) {
		this.age = age;
		this.name = name;
		this.address = address;
	}

	public int getAge() {
		return age;
	}

	public void setAge(int age) {
		this.age = age;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getAddress() {
		return address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

}


package java_20_12_16;

import java.util.Scanner;

public class Student extends Person {
	private String schoolName, department, studentId;
	private double avg[] = new double[8];
	Scanner sc = null;

	public Student(String schoolName, String department, String studentId, int age, String name, String address) {
		super(age, name, address);
		this.schoolName = schoolName;
		this.department = department;
		this.studentId = studentId;
	}

	public void setAvg() {
		sc = new Scanner(System.in);
		for (int i = 0; i < avg.length; i++) {
			System.out.print((i + 1) + "학기 학점 -> ");

			avg[i] = sc.nextDouble();

		}
		sc.close();
	}

	public double Avg() {
		double temp = 0;
		for (int i = 0; i < avg.length; i++) {
			temp += avg[i];
		}

		return temp / avg.length;

	}

}





7.다음은 도형의 구성을 묘사하는 인터페이스이다.

interface Shape {
   final double PI = 3.14;            // 상수
   void draw();                         // 도형을 그리는 추상 메소드
   double getArea();                 // 도형의 면적을 리턴하는 추상 메소드
   default public void redraw() { // 디폴트 메소드
      System.out.print("--- 다시 그립니다.");
      draw();
   }
}
다음 main() 메소드와 실행 결과를 참고하여, 인터페이스 Shape을 구현한 클래스 Circle를 작성하고 전체 프로그램을 완성하라.

public static void main(String[] args) {
   Shape donut = new Circle(10); // 반지름이 10인 원 객체
   donut.redraw();
   System.out.println("면적은 "+ donut.getArea());
}

package java_20_12_16;

import java.util.Scanner;

public class Student extends Person {
	private String schoolName, department, studentId;
	private double avg[] = new double[8];
	Scanner sc = null;

	public Student(String schoolName, String department, String studentId, int age, String name, String address) {
		super(age, name, address);
		this.schoolName = schoolName;
		this.department = department;
		this.studentId = studentId;
	}

	public void setAvg() {
		sc = new Scanner(System.in);
		for (int i = 0; i < avg.length; i++) {
			System.out.print((i + 1) + "학기 학점 -> ");

			avg[i] = sc.nextDouble();

		}
		sc.close();
	}

	public double Avg() {
		double temp = 0;
		for (int i = 0; i < avg.length; i++) {
			temp += avg[i];
		}

		return temp / avg.length;

	}

}
package java_20_12_16;

public class Cirlce implements Shape {
	
	double r;
	
	public Cirlce(double r) {
		this.r = r;
	}

	@Override
	public void draw() {
		System.out.println("반지름이 " +  r + "인 원을 그렸습니다.");
	}

	@Override
	public double getArea() {

		return r*r*PI;
	}

}
package java_20_12_16;

public class ShapeMain {

	public static void main(String[] args) {
		Shape donut = new Cirlce(10);
		donut.redraw();
		System.out.println("면적은" + donut.getArea() );

	}

}

8.
다음 main() 메소드와 실행 결과를 참고하여, 문제 7의 Shape 인터페이스를 구현한 클래스 Oval, Rect를 추가 작성하고
 전체 프로그램을 완성하라.

public static void main(String[] args) {
   Shape[] list = new Shape[3]; // Shape을 상속받은 클래스 객체의 레퍼런스 배열
   list[0] = new Circle(10); // 반지름이 10인 원 객체
   list[1] = new Oval(20, 30); // 20x30 사각형에 내접하는 타원
   list[2] = new Rect(10, 40); // 10x40 크기의 사각형
   for(int i=0; i<list.length; i++) list[i].redraw();
   for(int i=0; i<list.length; i++) System.out.println("면적은 "+ list[i].getArea());
}
--- 다시 그립니다.반지름이 10인 원입니다.
--- 다시 그립니다.20x30에 내접하는 타원입니다.
--- 다시 그립니다.10x40크기의 사각형 입니다.
면적은 314.0
면적은 1884.0000000000002
면적은 400.0

package java_20_12_16;

public class Oval implements Shape {

	double x, y;

	public Oval(double x, double y) {
		this.x = x;
		this.y = y;
	}

	@Override
	public void draw() {
		System.out.println("20x30에 내접하는 타원입니다.");
	}

	@Override
	public double getArea() {

		return x * y * Math.PI;
	}

}
package java_20_12_16;

public class Rect implements Shape {
	double width, heitht;

	public Rect(double width, double heitht) {
		this.width = width;
		this.heitht = heitht;
	}

	@Override
	public void draw() {
		System.out.println("10x40크기의 사각형 입니다.");
	}

	@Override
	public double getArea() {

		return width * heitht;
	}

}
