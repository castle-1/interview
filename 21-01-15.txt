1. 아래를 try catch 로 묶지 않으면 에러가 나는 이유를 설명하시오.
try {
		connection = dataSource.getConnection();
		String query = "insert into mvc_board (bId, bName, bTitle, bContent, bHit, bGroup, bStep, bIndent) 
		values (mvc_board_seq.nextval, ?, ?, ?, 0, mvc_board_seq.currval, 0, 0 )";
		preparedStatement = connection.prepareStatement(query);
		preparedStatement.setString(1, bName);
		preparedStatement.setString(2, bTitle);
		preparedStatement.setString(3, bContent);
		int rn = preparedStatement.executeUpdate();
	} catch (Exception e) {
		// TODO: handle exception
		e.printStackTrace();
	}
  

SQLException은 checked Exception이다. 따라서 반드시 예외처리를 해줘야한다.
db에 관한 오류를 프로그래머가 컨트롤 할 수 없기때문에 try catch로 오류를 체크해줘야 한다.

2. 데이터 무결성을 위한 제약조건 4가지는?
ㄱ. 개체 무결성
	- 모든 테이블은 primary key와 column을 가져야한다. primary key는 고유값을 가지고 null을 허용하지 않는다.
ㄴ. 참조 무결성
	- 참조 관계에 있는 두 테이블의 데이터가 항상 일관된 값을 갖도록 유지된다.
ㄷ. 도메인 무결성
	- 테이블에 존재하는 필드의 무결성을 보장하기 위한 것, 필드의 타입, null값의 허용 등에 대한 사항을 정의하고 올바른 데이터가 입력 됬는지 확인한다.
ㄹ. 무결성 규칙
	- 데이터의 무결성을 지키기 위한 모든 제약 사항, 비지니스 규칙은 데이터베이스를 이용하는 각각의 유저에 따라 서로다르게 적용 되지만 무결성 규칙은 데이터베이스 전체에 공통적으로 적용되는 규칙

3. foreign key 에 대하여 설명하시오.
	- 한 테이블의 키 중에서 다른 테이블의 레코드를 유일하게 식별할 수 있는 키.
	- 한 테이블의 레코드에서 다른 테이블의 레코드를 참조하기 위해 이용된다.


5. 쿼리 문제

ㄱ. 직업이 Clerk 인 사원들보다 더 많은 급여를 받는 사원의 사원번호, 이름, 급여를 출력하되, 결과를 급여가 높은 순으로 정렬하라.

SELECT empno, ename, sal 
FROM emp 
WHERE sal > ANY(SELECT sal FROM emp WHERE job = 'CLERK') ORDER BY sal DESC;


ㄴ. 이름에 A가 들어가는 사원과 같은 직업을 가진 사원의 이름과 월급, 부서번호를 출력하라.

SELECT ename, sal, deptno 
FROM emp 
WHERE job IN (SELECT job FROM emp WHERE ename LIKE '%A%');

ㄷ. New York 에서 근무하는 사원과 급여 및 커미션이 같은 사원의 사원이름과 부서명을 출력하라.

SELECT ename, dname
FROM emp, dept 
WHERE emp.deptno = dept.deptno AND sal IN (SELECT sal FROM emp, dept WHERE dept.deptno = emp.deptno AND dept.loc='NEW YORK') 
AND NVL(comm,0) IN (SELECT NVL(comm,0) FROM emp, dept WHERE dept.deptno = emp.deptno AND dept.loc='NEW YORK');