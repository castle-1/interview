1.비동기 통신과 동기통신의 차이점은?
비동기 : 일을 수행할때 요청사항을 기다리지 않고 계속 진행하며 요청사항을 리스폰 받으면 그때 요청사항을 수행한다.
동기 : 요청사항을 즉각적으로 처리하며 일을 수행해 나간다.

2.xml 과 json 에 대하여 설명하시오.

XML은 EXtensible Markup Language의 약자.
XML은 HTML과 매우 비슷한 문자 기반의 마크업 언어.
이 언어는 사람과 기계가 동시에 읽기 편한 구조로 되어 있다.

JSON과 XML의 공통점
a. 둘 다 데이터를 저장하고 전달하기 위해 고안.
b. 둘 다 기계뿐만 아니라 사람도 쉽게 읽을 수 있다.
c. 둘 다 계층적인 데이터 구조를 가진다.
d. 둘 다 다양한 프로그래밍 언어에 의해 파싱될 수 있다.
e. 둘 다 XMLHttpRequest 객체를 이용하여 서버로부터 데이터를 전송받을 수 있다.

JSON과 XML의 차이점
1. JSON은 종료 태그를 사용하지 않는다.
2. JSON의 구문이 XML의 구문보다 더 짧다.
3. JSON 데이터가 XML 데이터보다 더 빨리 읽고 쓸 수 있다.
4. XML은 배열을 사용할 수 없지만, JSON은 배열을 사용할 수 있다.
5. XML은 XML 파서로 파싱되며, JSON은 자바스크립트 표준 함수인 eval() 함수로 파싱된다.

XML은 HTML처럼 데이터를 보여주는 목적이 아닌, 데이터를 저장하고 전달할 목적으로만 만들어졌다.
또한, XML 태그는 HTML 태그처럼 미리 정의되어 있지 않고, 사용자가 직접 정의할 수 있다.

3.list를 ajax로 json으로 뽑아 내고, content_view 의 삭제또한 ajax를 사용하여 삭제해 보도록 하세요.

 - 컨트롤러 -
package edu.bit.ex.board.controller;

import java.util.List;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import edu.bit.ex.board.service.Boardservice;
import edu.bit.ex.board.vo.BoardVo;

import lombok.AllArgsConstructor;
import lombok.extern.log4j.Log4j;

//spring 4.0에서는 @restController라는 어노테이션을 추가해서 
//해당 controller의 모든 메서드의 리턴타입을 기존과 다르게 처리한다는것을 명시
@Log4j
@AllArgsConstructor
@Controller
public class RestBoardSpring4AfterController {

	private Boardservice boardService;

	@ResponseBody
	@GetMapping("/rest/after")
	public List<BoardVo> after(Model model) {
		log.info("After");

		return boardService.getlist();
	}

	@GetMapping("/ajaxList")
	public String list() {
		return "ajaxList";
	}

	@ResponseBody
	@RequestMapping(value = "/rest/delete/{bId}", method = RequestMethod.DELETE)
	public int restDelete(@PathVariable("bId") int bId) {

		log.info("restDelete");
		return boardService.deleteAjax(bId);
	}

	@GetMapping("/content_view2")
	public String content_view2(BoardVo boardVo, Model model) throws Exception {
		log.info("content_view2");

		model.addAttribute("content_view2", boardService.contentView(boardVo.getbId()));

		return "content_view2";
	}

}

 - 리스트 - 
<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<!DOCTYPE html>
<html>
	<head>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
	<title>Insert title here</title>
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
	<script type="text/javascript">
/* 	$.ajax({
		url : '서비스 주소'
			, data : '서비스 처리에 필요한 인자값'
			, type : 'HTTP방식' (POST/GET 등)
			, dataType : 'return 받을 데이터 타입' (json, text 등)
			, success : function('결과값'){
			// 서비스 성공 시 처리 할 내용
			}, error : function('결과값'){
			// 서비스 실패 시 처리 할 내용
			}
		}); */

		function getList() {
			var url = "${pageContext.request.contextPath}/rest/after.json";

			$.ajax({
	            type: 'GET',
	            url: url,
	            cache : false, // 이걸 안쓰거나 true하면 수정해도 값반영이 잘안댐
	            dataType: 'json',// 데이터 타입을 제이슨 꼭해야함, 다른방법도 2가지있음
		        success: function(result) {

					var htmls="";
					
		        	$("#list-table").html("");	

					$("<tr>" , {
						html : "<td>" + "번호" + "</td>"+  // 컬럼명들
								"<td>" + "이름" + "</td>"+
								"<td>" + "제목" + "</td>"+
								"<td>" + "날짜" + "</td>"+				
								"<td>" + "히트" + "</td>"
					}).appendTo("#list-table") // 이것을 테이블에붙임

					if(result.length < 1){
						htmls.push("등록된 댓글이 없습니다.");
					} else {

		                    $(result).each(function(){			                    			                    
			                    htmls += '<tr>';
			                    htmls += '<td>'+ this.bId + '</td>';
			                    htmls += '<td>'+ this.nName + '</td>';
			                    htmls += '<td>'
			         			for(var i=0; i < this.bIndent; i++) { //for 문은 시작하는 숫자와 종료되는 숫자를 적고 증가되는 값을 적어요. i++ 은 1씩 증가 i+2 는 2씩 증가^^
			         				htmls += '-'	
			        			}
			                    htmls += '<a href="${pageContext.request.contextPath}/content_view2?bId=' + this.bId + '">' + this.bTitle + '</a></td>';
			                    //htmls += '<a href="${pageContext.request.contextPath}/content_view2?bId=' + this.bId + '">' + this.bTitle + '</a></td>';
 			                    htmls += '<td>'+ this.bDate + '</td>'; 
			                    htmls += '<td>'+ this.bHit + '</td>';	
			                    htmls += '</tr>';			                    		                   
		                	});	//each end

		                	htmls+='<tr>';
		                	htmls+='<td colspan="5"> <a href="${pageContext.request.contextPath}/write_view">글작성</a> </td>';		                	
		                	htmls+='</tr>';
		                	
					}

					$("#list-table").append(htmls);
					
		        }

			});	// Ajax end
		
		}//end	getList()	
	</script>
	
	<script>
		$(document).ready(function(){
			getList();
		});
	</script>

</head>
<body>
	<table id="list-table" width="500" cellpadding="0" cellspacing="0" border="1">
	</table>
</body>
</html>

- 컨텐트 뷰 - 
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Insert title here</title>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

<script>
function getList() {
	var url = "${pageContext.request.contextPath}/rest/after.json";

	$.ajax({
        type: 'GET',
        url: url,
        cache : false, // 이걸 안쓰거나 true하면 수정해도 값반영이 잘안댐
        dataType: 'json',// 데이터 타입을 제이슨 꼭해야함, 다른방법도 2가지있음
        success: function(result) {

			var htmls="";
			
        	$("#list-table").html("");	

			$("<tr>" , {
				html : "<td>" + "번호" + "</td>"+  // 컬럼명들
						"<td>" + "이름" + "</td>"+
						"<td>" + "제목" + "</td>"+
						"<td>" + "날짜" + "</td>"+				
						"<td>" + "히트" + "</td>"
			}).appendTo("#list-table") // 이것을 테이블에붙임

			if(result.length < 1){
				htmls.push("등록된 댓글이 없습니다.");
			} else {

                    $(result).each(function(){			                    			                    
	                    htmls += '<tr>';
	                    htmls += '<td>'+ this.bId + '</td>';
	                    htmls += '<td>'+ this.nName + '</td>';
	                    htmls += '<td>'
	         			for(var i=0; i < this.bIndent; i++) { //for 문은 시작하는 숫자와 종료되는 숫자를 적고 증가되는 값을 적어요. i++ 은 1씩 증가 i+2 는 2씩 증가^^
	         				htmls += '-'	
	        			}
	                    htmls += '<a href="${pageContext.request.contextPath}/content_view2?bId=' + this.bId + '">' + this.bTitle + '</a></td>';
		                    htmls += '<td>'+ this.bDate + '</td>'; 
	                    htmls += '<td>'+ this.bHit + '</td>';	
	                    htmls += '</tr>';			                    		                   
                	});	//each end

                	htmls+='<tr>';
                	htmls+='<td colspan="5"> <a href="${pageContext.request.contextPath}/write_view">글작성</a> </td>';		                	
                	htmls+='</tr>';
                	
			}

			$("#list-table").append(htmls);
			
        }

	});	// Ajax end

}//end	getList()	
</script>

<script type="text/javascript">


	

	 $(document).ready(function (){
		$('#a-delete').click(function(event){
			//prevendDefault()는 href로 연결해 주지 않고 단순히 click에 대한 처리를 하도록 해준다.
			event.preventDefault();
			console.log("ajax 호출전"); 
			 
			$.ajax({
			    type : "DELETE",
			    url : "${pageContext.request.contextPath}/rest/delete/" + "${content_view2.bId}",
			    data:{"bId":"${content_view2.bId}"},
			   /*  success: function (result) {       
			           console.log(result); 
			           getList();               
			    },
			    error: function (e) {
			        console.log(e);
			    } */
			})
			getList();
			 
		});
	});	 
	
</script>
</head>
<body>

	<table id="list-table" width="500" cellpadding="0" cellspacing="0" border="1">
		<form action="modify" method="post">
			<input type="hidden" name="bId" value="${content_view2.bId}">
			<tr>
				<td> 번호 </td>
				<td> ${content_view2.bId} </td>
			</tr>
			<tr>
				<td> 히트 </td>
				<td> ${content_view2.bHit} </td>
			</tr>
			<tr>
				<td> 이름 </td>
				<td> <input type="text" name="nName" value="${content_view2.nName}"></td>
			</tr>
			<tr>
				<td> 제목 </td>
				<td> <input type="text" name="bTitle" value="${content_view2.bTitle}"></td>
			</tr>
			<tr>
				<td> 내용 </td>
				<td> <textarea rows="10" name="bContent" >${content_view2.bContent}</textarea></td>
			</tr>
			<tr >
				<td colspan="2"> <input type="submit" value="수정"> &nbsp;&nbsp; <input type="button" onclick="getList()" value="목록보기"/> &nbsp;&nbsp; <a id="a-delete" href="${pageContext.request.contextPath}/rest/delete?bId=${content_view.bId}">삭제</a>  &nbsp;&nbsp; <a href="reply_view?bId=${content_view2.bId}">답변</a></td>
			</tr>
		</form>
	</table>
	
</body>
</html>
   
문제..
success: function (result) {       
			          console.log(result); 
			           getList();               
			    },
			    error: function (e) {
			        console.log(e);
			    }

success 에서 result가 error 발생하여 getList로 가지 못한다.
하지만 데이터 삭제까지는 수행함.
-> org.apache.ibatis.binding.BindingException: 
	Mapper method 'edu.bit.ex.board.mapper.Boardmapper.ajaxDelete 
		attempted to return null from a method with a primitive return type (int).
메퍼에서 설정한 return타입인 int가 null로 리턴이 되는듯.
 결국 success 부분을 지우고 보라 getList함수를 호출하면 데이터가 삭제돼며 list로 돌아간다.
 