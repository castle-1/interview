- 컨트롤러 -
package edu.bit.ex.PagingController;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;

import edu.bit.ex.VO.PagingVO;
import edu.bit.ex.service.PagingService;
import lombok.AllArgsConstructor;
import lombok.extern.log4j.Log4j;

@Log4j
@AllArgsConstructor
@Controller
public class pagingController {
	
	private PagingService service;
	
	@GetMapping("/list")
	public String List(PagingVO vo, Model model,@RequestParam(value = "nowPage", required = false) String nowPage
			,@RequestParam(value = "cntPerPage", required = false)String cntPerPage) {
		log.info("pagingList");
		int total = service.countBoard();
		if(nowPage == null && cntPerPage ==null) {
			nowPage ="1";
			cntPerPage = "5";
		}else if(nowPage == null) {
			nowPage = "1";
		}else if(cntPerPage == null) {
			cntPerPage = "5";
		}
		
		vo = new PagingVO(total, Integer.parseInt(nowPage), Integer.parseInt(cntPerPage));
		model.addAttribute("paging", vo);
		model.addAttribute("viewAll", service.selectBoard(vo));
		return "Paging";
	}

}

- 서비스 인터페이스 -
package edu.bit.ex.service;

import java.util.List;

import edu.bit.ex.VO.BoardVO;
import edu.bit.ex.VO.PagingVO;

public interface PagingService {
	
	public int countBoard();
	public List<BoardVO> selectBoard(PagingVO vo); 
}

- 서비스 인터페이스 임플리먼츠 -
package edu.bit.ex.service;

import java.util.List;

import org.springframework.stereotype.Service;

import edu.bit.ex.VO.BoardVO;
import edu.bit.ex.VO.PagingVO;
import edu.bit.ex.mapper.PagingMapper;
import lombok.AllArgsConstructor;
import lombok.extern.log4j.Log4j;

@Log4j
@Service
@AllArgsConstructor
public class PagingImplService implements PagingService{

	private PagingMapper mapper;
	
	@Override
	public int countBoard() {
		log.info("countBoard");
		return mapper.countBoard();
	}

	@Override
	public List<BoardVO> selectBoard(PagingVO vo) {
		log.info("selectBoard");
		return mapper.selectBoard(vo);
	}

}

- 맵퍼 인터페이스 -
package edu.bit.ex.mapper;

import java.util.List;

import edu.bit.ex.VO.BoardVO;
import edu.bit.ex.VO.PagingVO;

public interface PagingMapper {

	int countBoard();

	List<BoardVO> selectBoard(PagingVO vo);

}

- 맵퍼 xml -
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="edu.bit.ex.mapper.PagingMapper">

	<select id="countBoard" resultType="int">
		<![CDATA[
			SELECT COUNT(*) FROM MVC_BOARD
		]]>
	</select>

	<!-- 페이징 처리 후 게시글 조회 -->
	<select id="selectBoard" resultType="edu.bit.ex.VO.BoardVO">
		<![CDATA[
			SELECT * 
				FROM (
					SELECT ROWNUM RN, A.* 
						FROM (
								select bId, nName, bTitle, bContent, bDate, bHit, bGroup, bStep, bIndent from mvc_board order by bGroup desc, bStep asc
								) A
						)
			WHERE RN BETWEEN #{start} AND #{end}
		]]>		
	</select>
	
	
	</mapper>
 - 디비 VO -
package edu.bit.ex.VO;

import java.sql.Date;

public class BoardVO {
	
	
	private int bId;      
	private String nName;             
	private String bTitle;            
	private String bContent;         
	private Date bDate;                    
	private int bHit;               
	private int bGroup;            
	private int bStep;             
	private int bIndent;
	
	public BoardVO() {
		super();
	}

	public BoardVO(int bId, String nName, String bTitle, String bContent, Date bDate, int bHit, int bGroup, int bStep,
			int bIndent) {
		super();
		this.bId = bId;
		this.nName = nName;
		this.bTitle = bTitle;
		this.bContent = bContent;
		this.bDate = bDate;
		this.bHit = bHit;
		this.bGroup = bGroup;
		this.bStep = bStep;
		this.bIndent = bIndent;
	}

	public int getbId() {
		return bId;
	}

	public void setbId(int bId) {
		this.bId = bId;
	}

	public String getnName() {
		return nName;
	}

	public void setnName(String nName) {
		this.nName = nName;
	}

	public String getbTitle() {
		return bTitle;
	}

	public void setbTitle(String bTitle) {
		this.bTitle = bTitle;
	}

	public String getbContent() {
		return bContent;
	}

	public void setbContent(String bContent) {
		this.bContent = bContent;
	}

	public Date getbDate() {
		return bDate;
	}

	public void setbDate(Date bDate) {
		this.bDate = bDate;
	}

	public int getbHit() {
		return bHit;
	}

	public void setbHit(int bHit) {
		this.bHit = bHit;
	}

	public int getbGroup() {
		return bGroup;
	}

	public void setbGroup(int bGroup) {
		this.bGroup = bGroup;
	}

	public int getbStep() {
		return bStep;
	}

	public void setbStep(int bStep) {
		this.bStep = bStep;
	}

	public int getbIndent() {
		return bIndent;
	}

	public void setbIndent(int bIndent) {
		this.bIndent = bIndent;
	}   
	
	
	

}

- 페이징 VO-

package edu.bit.ex.VO;

public class PagingVO {
	
	private int nowPage; //현재페이지
	private int startPage; //시작페이지
	private int endPage; //마지막페이지
	private int total; //게시글 총 갯수
	private int cntPerPage; //페이지당 글 갯수
	private int lastPage; //마지막페이지
	private int start; //쿼리에 사용할 start
	private int end; //쿼리에 사용할 end
	private int cntPage = 5;
	
	
	public PagingVO() {
		super();
	}
	
	public PagingVO(int total, int nowPage, int cntPerPage) {
		setNowPage(nowPage);
		setCntPerPage(cntPerPage);
		setTotal(total);
		calcLastPate(getTotal(), getCntPage());
		calcStartEndPage(getNowPage(), cntPage);
		calcStartEnd(getNowPage(), getCntPerPage());
	}
	
	public void calcLastPate(int total, int cntPerPage) { //가장 마지막 페이지 계산
		setLastPage((int)Math.ceil((double)total / (double)cntPerPage));
	}
	
	public void calcStartEndPage(int nowPage, int cntPage) { //시작, 끝 페이지 계산
		setEnd(((int)Math.ceil((double)nowPage / (double)cntPage)) * cntPage);
		if(getLastPage() < getEnd()) {
			setEnd(getLastPage());
		}
		setStartPage(getEndPage() - cntPage +1);
		if(getStartPage() < 1) {
			setStartPage(1);
		}
	}
	
	public void calcStartEnd(int nowPage, int cntPerPage) { //디비 쿼리에 사용할 start, end값 계산
		setEnd(nowPage * cntPerPage);
		setStart(getEnd() - cntPerPage +1);
	}


	public int getNowPage() {
		return nowPage;
	}


	public void setNowPage(int nowPage) {
		this.nowPage = nowPage;
	}


	public int getStartPage() {
		return startPage;
	}


	public void setStartPage(int startPage) {
		this.startPage = startPage;
	}


	public int getEndPage() {
		return endPage;
	}


	public void setEndPage(int endPage) {
		this.endPage = endPage;
	}


	public int getTotal() {
		return total;
	}


	public void setTotal(int total) {
		this.total = total;
	}


	public int getCntPerPage() {
		return cntPerPage;
	}


	public void setCntPerPage(int cntPerPage) {
		this.cntPerPage = cntPerPage;
	}


	public int getLastPage() {
		return lastPage;
	}


	public void setLastPage(int lastPage) {
		this.lastPage = lastPage;
	}


	public int getStart() {
		return start;
	}


	public void setStart(int start) {
		this.start = start;
	}


	public int getEnd() {
		return end;
	}


	public void setEnd(int end) {
		this.end = end;
	}


	public int getCntPage() {
		return cntPage;
	}


	public void setCntPage(int cntPage) {
		this.cntPage = cntPage;
	}
	
	
	@Override
	public String toString() {
		// TODO Auto-generated method stub
		return "PagingVO [nowPage=" + nowPage + ", startPage=" + startPage + ", endPage=" + endPage +", total="+total
				+", cntPerPage=" + cntPerPage + ", lastPage=" + lastPage + ", start=" + start + ",end=" + ", end"
				+", cntPage=" + cntPage + "]";
	}
	

}

- 페이징 JSP -
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>
<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>게시판 목록</title>
</head>
<style>
	h2 {
		text-align: center;
	}
	table {
		width: 100%;
	}
	#outter {
		display: block;
		width: 60%;
		margin: auto;
	}
	a {
		text-decoration: none;
	}
</style>
<script>
	function selChange() {
		var sel = document.getElementById('cntPerPage').value;
		location.href="list?nowPage=${paging.nowPage}&cntPerPage="+sel;
	}
</script>
<body>
<h2>게시판</h2>

<div id="outter">
	<div style="float: right;">
		<select id="cntPerPage" name="sel" onchange="selChange()">
			<option value="5"
				<c:if test="${paging.cntPerPage == 5}">selected</c:if>>5줄 보기</option>
			<option value="10"
				<c:if test="${paging.cntPerPage == 10}">selected</c:if>>10줄 보기</option>
			<option value="15"
				<c:if test="${paging.cntPerPage == 15}">selected</c:if>>15줄 보기</option>
			<option value="20"
				<c:if test="${paging.cntPerPage == 20}">selected</c:if>>20줄 보기</option>
		</select>
	</div> <!-- 옵션선택 끝 -->
	<table border="1">
		<tr>
			<td>번호</td>
			<td width="50%">이름</td>
			<td>제목</td>
			<td>작성자</td>
			<td>히트</td>		
		</tr>
		<c:forEach items="${viewAll }" var="list">
			<tr>
				<td>${list.bId }</td>
				<td><a href='detail?seq=${list.bId }'>${list.nName }</a></td>
				<td>${list.bTitle }</td>
				<td><fmt:formatDate value="${list.bDate }" pattern="yyyy.MM.dd"/> </td>
				<td>${list.bHit }</td>
			</tr>
		</c:forEach>
	</table>
	<input type="button" value="글쓰기" style="float: right;" onclick="location.href='/write'"><br>
	
	<div style="display: block; text-align: center;">		
		<c:if test="${paging.startPage != 1 }">
			<a href="list?nowPage=${paging.startPage - 1 }&cntPerPage=${paging.cntPerPage}">&lt;</a>
		</c:if>
		<c:forEach begin="${paging.startPage }" end="${paging.endPage }" var="p">
			<c:choose>
				<c:when test="${p == paging.nowPage }">
					<b>${p }</b>
				</c:when>
				<c:when test="${p != paging.nowPage }">
					<a href="list?nowPage=${p }&cntPerPage=${paging.cntPerPage}">${p }</a>
				</c:when>
			</c:choose>
		</c:forEach>
		<c:if test="${paging.endPage != paging.lastPage}">
			<a href="list?nowPage=${paging.endPage+1 }&cntPerPage=${paging.cntPerPage}">&gt;</a>
		</c:if>
	</div>
</div>
</body>
</html>