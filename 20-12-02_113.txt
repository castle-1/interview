1.생성자란 무엇인가?
ex) Circle cirlce = new Circle(); 
생성자는 Circle(), 클레스에서 생성자를 생성하지 않을시 컴파일러가 자동으로 디폴트 생성자를 만들어준다.
또한 생성자는 리턴이 없다. 이유는 함수에 제한을 두기 위함이고 생성자의 용도는 연산의 종류가 아니라 값을 초기화 하는 부분에 있다.

2.디폴트 생성자란 무엇인가?
클레스에서 생성자를 생성하지 않을시 컴파일러가 자동으로 디폴트 생성자를 만들어준다.

3.생성자의 용도에 대하여 설명하시오.
생성자의 용도는 연산의 종류가 아니라 값을 초기화 하는 부분에 있다.

4.null 에 대하여 설명하시오.
객체에 null이 들어가 있으면 각체가 참조하는것과 관계를 끊으며
객체가 주소를 가지고있지 않다는것을 의미한다.

5.금일 프로그래밍 했던 문제
========================================
자바 클래스를 작성하는 연습을 해보자. 다음 main() 메소드를 실행하였을 때 예시와 같이 출력되도록 TV 클래스를 작성하라.

public static void main(String[] args) {
   TV myTV = new TV("LG", 2017, 32); //LG에서 만든 2017년 32인치
   myTV.show();
}
LG에서 만든 2017년형 32인치 TV
public class TVmain {

	public static void main(String[] args) {
		
		TV myTv = new TV("LG",2017,32);
		myTv.show();

	}

}

public class TV {

	String brand;
	int year, inch;

	public TV(String brand, int year, int inch) {

		this.brand = brand;
		this.year = year;
		this.inch = inch;
	}

	public String getBrand() {
		return brand;
	}

	public void setBrand(String brand) {
		this.brand = brand;
	}

	public int getYear() {
		return year;
	}

	public void setYear(int year) {
		this.year = year;
	}

	public int getInch() {
		return inch;
	}

	public void setInch(int inch) {
		this.inch = inch;
	}

	public void show() {
		System.out.println(brand + "에서 민든 " + year + "년형 " + inch + "인치 TV");
	}

}
==========================================
		int math, science, english;
		math = 90;
		science = 100; 
		english = 80;
		
		Grade me = new Grade(math, science, english);
		System.out.println("평균은 " + me.average());
============================================
노래 한 곡을 나타내는 Song 클래스를 작성하라. Song은 다음 필드로 구성된다.

- 노래의 제목을 나타내는 title
- 가수를 나타내는 artist
- 노래가 발표된 연도를 나타내는 year
- 국적을 나타내는 country

또한 Song 클래스에 다음 생성자와 메소드를 작성하라.
- 생성자 2개: 기본 생성자와 매개변수로 모든 필드를 초기화하는 생성자
- 노래 정보를 출력하는 show() 메소드
- main() 메소드에서는 1978년, 스웨덴 국적의 ABBA가 부른 "Dancing Queen"을
song 객체로 생성하고 show()를 이용하여 노래의 정보를 다음과 같이 출력하라.
public class SongMain {

	public static void main(String[] args) {

		Song song = new Song("Dancing Queen", "ABBA", "스웨덴", 1978);
		song.show();
		
		Song song2 = new Song("이별공식", "Ref", "대한민국", 1992);
		song2.show();

	}

}

public class Song {

	String title, artist, country;
	int year;

	public String getTitle() {
		return title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	public String getArtist() {
		return artist;
	}

	public void setArtist(String artist) {
		this.artist = artist;
	}

	public String getCountry() {
		return country;
	}

	public void setCountry(String country) {
		this.country = country;
	}

	public int getYear() {
		return year;
	}

	public void setYear(int year) {
		this.year = year;
	}

	public Song(String title, String artist, String country, int year) {

		this.title = title;
		this.artist = artist;
		this.country = country;
		this.year = year;
	}
	public Song() {
		
	}

	public void show() {
		System.out.println(year + "년 " + country + "국적의 " + artist + "가 부른 " + title);
	}

}
===============================================
아래와 같이 성적을 연속적으로 입력 받고 평균을 내는  프로그램을 작성하시오.

국어 영어 수학을 입력하세요!
100 60 70
평균은 76.66666666666667
계속 하시겠습니까
y
국어 영어 수학을 입력하세요!
90 80 70
평균은 80.0
계속 하시겠습니까
n
프로그램 종료 입니다.

import java.util.Scanner;

public class GradeMain {

	public static void main(String[] args) {
		boolean yn = true;
		Scanner sc = null;
		int num1, num2, num3;

		while (yn) {
			
			sc = new Scanner(System.in);
			System.out.println("수학, 과학, 영어 점수를 입력하세요.");

			num1 = sc.nextInt();
			num2 = sc.nextInt();
			num3 = sc.nextInt();

			Grade me = new Grade(num1, num2, num3);
			System.out.printf("평균 : %.3f점\n", me.average());

			System.out.println("계속 하시겠습니까?(y/n)");
			String answer = sc.next(); //answer에는 주소가 들어가있음
			//char yesno = sc.next().charAt(0);//첫 번째 문자만 받음

			if (answer.equals("y") || answer.equals("Y")) { //answer == "y" 잘못된 표현 주소와 문자열을 비교할 수 없음
				continue;
			} else if (answer.equals("n") || answer.equals("N")) {
				System.out.println("시스템이 종료되었습니다.");
				yn = false;
				break;

			}
			sc.close();

		}

	}

}

public class Grade {

	int math, science, eng;

	public double average() {
		return (math + science + eng) / 3.0;

	}

	public Grade(int math, int science, int eng) {

		this.math = math;
		this.science = science;
		this.eng = eng;
	}
	public Grade() {
		
	}

	public int getMath() {
		return math;
	}

	public void setMath(int math) {
		this.math = math;
	}

	public int getScience() {
		return science;
	}

	public void setScience(int science) {
		this.science = science;
	}

	public int getEng() {
		return eng;
	}

	public void setEng(int eng) {
		this.eng = eng;
	}

}

==============================================
6. 아래의 프로그램을 작성하시오.
 - 화폐 매수 구하기
 - 반드시 클래스로 작성할것 
출력
---------------------------------
136000
오만원 : 2장
만원 : 3장
오천원 : 1장
천원 : 1장
오백원 : 0개
백원 : 0개
계속 하시겠습니까
y
1456000
오만원 : 29장
만원 : 0장
오천원 : 1장
천원 : 1장
오백원 : 0개
백원 : 0개
계속 하시겠습니까

import java.util.Scanner;

public class MoneyMain {

	public static void main(String[] args) {

		boolean tf = true;
		Scanner sc = null;
		int price;
		while (tf) {
			sc = new Scanner(System.in);
			System.out.println("금액을 100단위까지만 입력하세요.");
			price = sc.nextInt();

			Money money = new Money(price);
			money.count();

			System.out.println("계속 하시겠습니까?(y/n)");
			String answer = sc.next();

			if (answer.equals("y") || answer.equals("Y")) {
				continue;

			} else {
				System.out.println("시스템이 종료되었습니다.");
				tf = false;
				break;

			}

		}
		sc.close();
	}
}

public class Money {

	int price;
	int fiveman;
	int oneman;
	int fivecheon;
	int onecheon;
	int fivebaeg;
	int onebaeg;

	public Money(int price) {
		this.price = price;
		
	}

	public int getPrice() {
		return price;
	}

	public void setPrice(int price) {
		this.price = price;
	}

	public int getFiveman() {
		return price / 50000;
	}

	public void setFiveman(int fiveman) {
		this.fiveman = fiveman;
	}

	public int getOneman() {
		return (price % 50000) / 10000; // 일만;
	}

	public void setOneman(int oneman) {
		this.oneman = oneman;
	}

	public int getFivecheon() {
		return ((price % 50000) % 10000) / 5000; // 오천;
	}

	public void setFivecheon(int fivecheon) {
		this.fivecheon = fivecheon;
	}

	public int getOnecheon() {
		return (((price % 50000) % 10000) % 5000) / 1000; // 일천
	}

	public void setOnecheon(int onecheon) {
		this.onecheon = onecheon;
	}

	public int getFivebaeg() {
		return ((((price % 50000) % 10000) % 5000) % 1000) / 500; // 오백
	}

	public void setFivebaeg(int fivebaeg) {
		this.fivebaeg = fivebaeg;
	}

	public int getOnebaeg() {
		return (((((price % 50000) % 10000) % 5000) % 1000) % 500) / 100; // 일백
	}

	public void setOnebaeg(int onebaeg) {
		this.onebaeg = onebaeg;
	}

	public void count() {

		System.out.println(price + "원");
		System.out.println("5만원권 : " + getFiveman() + "장");
		System.out.println("1만원권 : " + getOneman() + "장");
		System.out.println("5천원권 : " + getFivecheon() + "장");
		System.out.println("1천원권 : " + getOnecheon() + "장");
		System.out.println("500원 동전 : " + getFivebaeg()+ "개");
		System.out.println("100원 동전 : " + getOnebaeg() + "개");
	}

}


7.자바의 명명 규칙에 대하여 설명하시오.
-클래스 : 첫글자는 대문자로 시작
-메소드와 변수 : 첫 극ㄹ자는 소문자로 시작, 둘이상의 단어가 묶였을시 두 번째로 오는 글자는 대문자로 시작
-상수 : 상수는 대문자로만 표현, 둘이상의 단어가 묶였을때는 언더바를 사용
-camel case : 둘 이상의 단어가 묶였을때 두 번째 단어의 첫 글자를 대문자로 표현
-snake case : 둘 이상의 단어가 묶였을때 두 번째 단어 시작에 언더바를 사용하여 표현

